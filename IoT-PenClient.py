import subprocess
import platform
import requests


def install_nmap():
    # Check if Nmap is already installed
    try:
        subprocess.run(['nmap', '--version'], stdout=subprocess.PIPE, stderr=subprocess.PIPE, check=True)
        print("Nmap is already installed")
    except subprocess.CalledProcessError:
        # Nmap is not installed, proceed with installation
        try:
            if platform.system() == "Windows":
                # Download the Nmap installer from the official website
                nmap_url = "https://nmap.org/dist/nmap-7.92-win32.zip"
                subprocess.run(['curl', '-o', 'nmap.zip', nmap_url], check=True)
                subprocess.run(['tar', '-xf', 'nmap.zip'], check=True)
                print("Nmap installed successfully")
            else:
                print("Unsupported operating system for Nmap installation")
        except subprocess.CalledProcessError as e:
            print(f"Error installing Nmap: {e.stderr.decode().strip()}")


def run_nmap_scan(target, output_file):
    try:
        result = subprocess.run(['nmap', '-sV', '--script', 'vulners', '-oX', output_file, target],
                                stdout=subprocess.PIPE, stderr=subprocess.PIPE, check=True, text=True)
        print(result)

        result = subprocess.run(['nmap', '-sV', '--script', 'vulners', '-oX', output_file, target],
                                stdout=subprocess.PIPE, stderr=subprocess.PIPE, check=True, text=True)
        output = result.stdout.strip()
        print(output)
    except subprocess.CalledProcessError as e:
        print(f"Error running Nmap scan: {e.stderr.decode().strip()}")


# Example usage
target = "127.0.0.1"  # Replace with your target IP or hostname
output_file = "scan.xml"  # Path and filename for the XML output
url = "http://localhost:5000/api/data"

install_nmap()
run_nmap_scan(target, output_file)


def send_xml_file_to_server(url, xml_file):
    try:
        with open(xml_file, 'rb') as file:
            response = requests.post(url, files={'file': file})
        if response.status_code == 200:
            print("XML file sent successfully to the server")
        else:
            print(f"Error sending XML file to the server: {response.text}")
    except IOError as e:
        print(f"Error reading XML file: {str(e)}")
    except requests.exceptions.RequestException as e:
        print(f"Error connecting to the server: {str(e)}")


send_xml_file_to_server(url, output_file)
