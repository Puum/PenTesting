import json

import requests
import time
import xml.etree.ElementTree as ET

xml_filename= "scan.xml"
def getCVETag(xml_file):
    # Parse the XML file
    tree = ET.parse(xml_file)
    root = tree.getroot()

    # List to store the strings between tags
    CVE = []

    # Find all "elem" tags in the XML tree
    elems = root.findall(".//elem")

    # Traverse each "elem" tag and get the text content
    for elem in elems:
        if "key" in elem.attrib and elem.attrib["key"] == "id":
            text = elem.text
            if text is not None:
                CVE.append(text.strip())

    return CVE
def save_json_to_file(json_data, filename):
    # Open the file in write mode
    with open(filename, 'w') as json_file:
        # Write the JSON data to the file
        json.dump(json_data, json_file)

def get_cve_details(cve_numbers):
    base_url = "https://services.nvd.nist.gov/rest/json/cves/2.0/"
    results = []

    for cve_number in cve_numbers:
        url = f"{base_url}?cveID={cve_number}"
        response = requests.get(url)
        if response.status_code == 200:
            save_json_to_file(response.json(),"scanningResult/"+cve_number+".json")
            print("Progress ...........")
            time.sleep(5)

        else:
            print(f"Failed to retrieve details for CVE-{cve_number}")

    return results
cve_numbers = getCVETag(xml_filename)  # Replace with your desired CVE numbers
get_cve_details(cve_numbers)




#ToDo Result from the NVD into nice looking WhatSoEver


#ToDo for each IP in the network topology start one client
#ToDo Get all Client results and sum up in one xml includign mapping

#ToDo the stupid graph we all do not understand how it is build

#ToDo Present results one a localhost webside




